use 'make' to make
use 'make run > filename' to test, you can pipe output to a file

list of hijacked functions:
    char *getenv(const char *name)
    char *nl_langinfo(nl_item item)
    char *setlocale(int category, const char *locale)
    char *strcasestr(const char *haystack, const char *needle)
    char *strchr(const char *s, int c)
    char *strcpy(char *dest, const char *src)
    char *strpbrk(const char *s, const char *accept)
    char *strptime(const char *s, const char *format, struct tm *tm)
    char *strrchr(const char *s, int c)
    FILE *fopen(const char *path, const char *mode)
    int clock_getres(clockid_t clk_id, struct timespec *res)
    int clock_gettime(clockid_t clk_id, struct timespec *tp)
    int close(int fd)
    int fclose(FILE *fp)
    int ferror(FILE *stream)
    int fileno(FILE *stream)
    int getpeername(int sockfd, struct sockaddr *addr, socklen_t *addrlen)
    int isatty(int fd)
    int memcmp(const void *s1, const void *s2, size_t n)
    int socket(int domain, int type, int protocol)
    int strcasecmp(const char *s1, const char *s2)
    int strcmp(const char *s1, const char *s2)
    int strncasecmp(const char *s1, const char *s2, size_t n)
    int strncmp(const char *s1, const char *s2, size_t n)
    long sysconf(int name)
    size_t strlen(const char *s)
    ssize_t read(int fd, void *buf, size_t count)
    ssize_t recv(int sockfd, void *buf, size_t len, int flags)
    time_t timegm(struct tm *tm)
    void exit(int status)
    void freeaddrinfo(struct addrinfo *res)
    void *memchr(const void *s, int c, size_t n)
    void *memcpy(void *dest, const void *src, size_t n)
    void *memrchr(const void *s, int c, size_t n)
    void *memset(void *s, int c, size_t n)
    void *realloc(void *ptr, size_t size)

